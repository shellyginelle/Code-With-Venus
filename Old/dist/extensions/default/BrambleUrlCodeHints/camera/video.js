define(function(require,exports,module){"use strict";var vendorURL=window.URL||window.webkitURL;function Video(context){this.context=context;this.streaming=false}Video.prototype.play=function(stream){var self=this;var mainInterface=this.context.interface;mainInterface.init();var videoInterface=this.interface;var playVideo=function(){videoInterface.removeEventListener("playing",playVideo);self.startStream()};var pauseVideo=function(){videoInterface.removeEventListener("pause",pauseVideo);self.endStream()};var videoError=function(ev){videoInterface.removeEventListener("playing",playVideo);videoInterface.removeEventListener("pause",pauseVideo);self.endStream();this.context.fail(new Error("Failed to load "+ev.target.src))};this.stream=stream;videoInterface.src=vendorURL.createObjectURL(stream);videoInterface.addEventListener("playing",playVideo,false);videoInterface.addEventListener("pause",pauseVideo);videoInterface.addEventListener("error",videoError);mainInterface.enableSnapIcon();videoInterface.play()};Video.prototype.startStream=function(){if(this.streaming){return}var width=this.context.interface.getWidth();var height=this.interface.videoHeight/(this.interface.videoWidth/width);if(isNaN(height)){height=width/(4/3)}this.context.interface.setCameraSize(height);this.streaming=true};Video.prototype.endStream=function(){vendorURL.revokeObjectURL(this.interface.src);if(this.stream){var video=this.stream.getVideoTracks?this.stream.getVideoTracks()[0]:null;if(video){video.stop()}this.stream=null;this.streaming=false}};module.exports=Video});