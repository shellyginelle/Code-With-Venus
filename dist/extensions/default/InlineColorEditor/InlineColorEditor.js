define(function(require,exports,module){"use strict";var InlineWidget=brackets.getModule("editor/InlineWidget").InlineWidget,ColorEditor=require("ColorEditor").ColorEditor,ColorUtils=brackets.getModule("utils/ColorUtils");var MAX_USED_COLORS=7;var lastOriginId=1;function InlineColorEditor(color,marker){this._color=color;this._marker=marker;this._isOwnChange=false;this._isHostChange=false;this._origin="+InlineColorEditor_"+lastOriginId++;this._handleColorChange=this._handleColorChange.bind(this);this._handleHostDocumentChange=this._handleHostDocumentChange.bind(this);InlineWidget.call(this)}InlineColorEditor.prototype=Object.create(InlineWidget.prototype);InlineColorEditor.prototype.constructor=InlineColorEditor;InlineColorEditor.prototype.parentClass=InlineWidget.prototype;InlineColorEditor.prototype.colorEditor=null;InlineColorEditor.prototype._color=null;InlineColorEditor.prototype._marker=null;InlineColorEditor.prototype._isOwnChange=null;InlineColorEditor.prototype._isHostChange=null;InlineColorEditor.prototype._origin=null;InlineColorEditor.prototype.getCurrentRange=function(){var pos,start,end;pos=this._marker&&this._marker.find();start=pos&&pos.from;if(!start){return null}end=pos.to;if(!end){end={line:start.line}}var line=this.hostEditor.document.getLine(start.line),matches=line.substr(start.ch).match(ColorUtils.COLOR_REGEX);if(matches&&(end.ch===undefined||end.ch-start.ch<matches[0].length)){end.ch=start.ch+matches[0].length;this._marker.clear();this._marker=this.hostEditor._codeMirror.markText(start,end)}if(end.ch===undefined){return null}else{return{start:start,end:end}}};InlineColorEditor.prototype._handleColorChange=function(colorString){var self=this;if(colorString!==this._color){var range=this.getCurrentRange();if(!range){return}if(!this._isHostChange){var endPos={line:range.start.line,ch:range.start.ch+colorString.length};this._isOwnChange=true;this.hostEditor.document.batchOperation(function(){self.hostEditor.setSelection(range.start,range.end);self.hostEditor.document.replaceRange(colorString,range.start,range.end,self._origin);self.hostEditor.setSelection(range.start,endPos);if(self._marker){self._marker.clear();self._marker=self.hostEditor._codeMirror.markText(range.start,endPos)}});this._isOwnChange=false}this._color=colorString}};InlineColorEditor.prototype.load=function(hostEditor){InlineColorEditor.prototype.parentClass.load.apply(this,arguments);var allColorsInDoc=this.hostEditor.document.getText().match(ColorUtils.COLOR_REGEX);var swatchInfo=this._collateColors(allColorsInDoc,MAX_USED_COLORS);this.colorEditor=new ColorEditor(this.$htmlContent,this._color,this._handleColorChange,swatchInfo)};InlineColorEditor.prototype.onAdded=function(){InlineColorEditor.prototype.parentClass.onAdded.apply(this,arguments);var doc=this.hostEditor.document;doc.addRef();doc.on("change",this._handleHostDocumentChange);this.hostEditor.setInlineWidgetHeight(this,this.colorEditor.getRootElement().outerHeight(),true);this.colorEditor.focus()};InlineColorEditor.prototype.onClosed=function(){InlineColorEditor.prototype.parentClass.onClosed.apply(this,arguments);if(this._marker){this._marker.clear()}var doc=this.hostEditor.document;doc.off("change",this._handleHostDocumentChange);doc.releaseRef();this.colorEditor.destroy()};function _colorSort(a,b){if(a.count===b.count){return 0}if(a.count>b.count){return-1}if(a.count<b.count){return 1}}InlineColorEditor.prototype._collateColors=function(originalArray,maxLength){var colorInfo={};originalArray.forEach(function(originalColor){var key=originalColor.toLowerCase();if(colorInfo[key]){colorInfo[key].count++}else{colorInfo[key]={value:originalColor,count:1}}});var uniqueColors=$.map(colorInfo,function(info){return info});uniqueColors.sort(_colorSort);return uniqueColors.slice(0,maxLength)};InlineColorEditor.prototype._handleHostDocumentChange=function(){if(this._isOwnChange){return}var range=this.getCurrentRange();if(range){var newColor=this.hostEditor.document.getRange(range.start,range.end);if(newColor!==this._color){if(this.colorEditor.isValidColor(newColor)){this._isHostChange=true;this.colorEditor.setColorFromString(newColor);this._isHostChange=false}}}else{this.close()}};exports.InlineColorEditor=InlineColorEditor});