define(function(require,exports,module){"use strict";var BaseServer=brackets.getModule("LiveDevelopment/Servers/BaseServer").BaseServer,LiveDevelopmentUtils=brackets.getModule("LiveDevelopment/LiveDevelopmentUtils"),Content=brackets.getModule("filesystem/impls/filer/lib/content"),BlobUtils=brackets.getModule("filesystem/impls/filer/BlobUtils"),Filer=brackets.getModule("filesystem/impls/filer/BracketsFiler"),Path=Filer.Path,HTMLRewriter=brackets.getModule("filesystem/impls/filer/lib/HTMLRewriter"),CSSRewriter=brackets.getModule("filesystem/impls/filer/lib/CSSRewriter");var Compatibility=require("lib/compatibility"),MouseManager=require("lib/MouseManager"),LinkManager=require("lib/LinkManager");var fs=Filer.fs(),_shouldUseBlobURL;function _isHTML(path){return LiveDevelopmentUtils.isStaticHtmlFileExt(path)}function _isCSS(path){return Content.isCSS(Path.extname(path))}function HTMLServer(config){config=config||{};BaseServer.call(this,config)}HTMLServer.prototype=Object.create(BaseServer.prototype);HTMLServer.prototype.constructor=HTMLServer;HTMLServer.prototype.pathToUrl=function(path){return BlobUtils.getUrl(path)};HTMLServer.prototype.urlToPath=function(url){return BlobUtils.getFilename(url)};HTMLServer.prototype.readyToServe=function(){var deferred=new $.Deferred;Compatibility.supportsIFrameHTMLBlobURL(function(err,shouldUseBlobURL){if(err){console.error("[Brackets HTMLServer] Unexpected error:",err);deferred.reject()}_shouldUseBlobURL=shouldUseBlobURL;deferred.resolve()});return deferred.promise()};HTMLServer.prototype.canServe=function(localPath){if(localPath===this._pathResolver(localPath)){return false}if(localPath.match(/\/$/)){return true}return _isHTML(localPath)};HTMLServer.prototype.add=function(liveDocument){if(liveDocument.setInstrumentationEnabled){liveDocument.setInstrumentationEnabled(true)}BaseServer.prototype.add.call(this,liveDocument)};HTMLServer.prototype.serveLiveDocForUrl=function(url,callback){var path=BlobUtils.getFilename(url);this.serveLiveDocForPath(path,callback)};HTMLServer.prototype.serveLiveDocForPath=function(path,callback){var server=this;var liveDocument=this.get(path);function serveCSS(path,css,callback){CSSRewriter.rewrite(path,css,function(err,css){if(err){callback(err);return}callback(null,BlobUtils.createURL(path,css,"text/css"))})}function serveHTML(path,html,server,callback){HTMLRewriter.rewrite(path,html,server,function(err,html){if(err){callback(err);return}callback(null,_shouldUseBlobURL?BlobUtils.createURL(path,html,"text/html"):html)})}function serve(body){if(_isHTML(path)){serveHTML(path,body,server,callback)}else if(_isCSS(path)){serveCSS(path,body,callback)}else{callback(new Error("[Brackets HTMLServer] expected .html or .css live doc type:"+path))}}if(liveDocument){serve(liveDocument.getResponseData().body)}else{fs.readFile(path,"utf8",function(err,content){if(err){return callback(err)}var scripts=MouseManager.getRemoteScript(path)+LinkManager.getRemoteScript();var scriptsWithEndTag=scripts+"$&";var headRegex=new RegExp(/<\/\s*head>/);var htmlRegex=new RegExp(/<\/\s*html>/);if(headRegex.test(content)){content=content.replace(headRegex,scriptsWithEndTag)}else if(htmlRegex.test(content)){content=content.replace(htmlRegex,scriptsWithEndTag)}else{content+=scripts}serve(content)})}};exports.HTMLServer=HTMLServer});